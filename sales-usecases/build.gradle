apply plugin: 'org.springframework.boot'
apply plugin: 'maven'

archivesBaseName = 'sales-usecases'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://venus-pj.org/artifactory/libs-release/'
    }
}

dependencies {
    compile group: 'org.venuspj.sales', name : 'sales-core', version: "${version}"
    compile group: "org.springframework.boot", name: "spring-boot-starter", version: "${springBootVersion}"
    compile group: 'org.slf4j', name : 'slf4j-api', version: "${slf4jVersion}"
    testRuntime group: 'ch.qos.logback', name : 'logback-classic', version: "${logbackVersion}"
    testCompile(group: "org.springframework.boot", name: "spring-boot-starter-test", version: "${springBootVersion}"){
        exclude  group: 'org.assertj'
    }
    testCompile group: 'org.venuspj.sales', name : 'sales-core-mock', version: "${version}"

}

bootRepackage{
    enabled = false
}

configurations {
    deployerJars
}

task writeNewPom << {
    pom {
        project {
            inceptionYear '2017'
        }
    }.writeTo("$buildDir/newpom.xml")
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "http://venus-pj.org/artifactory/libs-release-local") {
            authentication(userName: "deploy", password: "earthdawn")
        }
    }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
